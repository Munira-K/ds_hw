import streamlit as st
import plotly.express as px
import matplotlib.pyplot as plt
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import roc_curve, roc_auc_score
import pandas as pd
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from sklearn.preprocessing import StandardScaler

st.title('–ó–∞–¥–∞–Ω–∏—è 1, 4, 5')
st.write(''' ### üîπ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö:
         
–ó–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è UCI, –≤–∫–ª—é—á–∞—è —Å—Ç–æ–ª–±–µ—Ü —Å –º–µ—Ç–∫–∞–º–∏ –∫–ª–∞—Å—Å–æ–≤, —É–∫–∞–∑–∞–Ω–Ω—ã–π –≤ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–º –∑–∞–¥–∞–Ω–∏–∏.
''')

# –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü
red_wine = pd.read_csv(r"C:\Users\user\Desktop\ds_course\HW5\source\winequality-red.csv", sep=";")
white_wine = pd.read_csv(r"C:\Users\user\Desktop\ds_course\HW5\source\winequality-white.csv", sep=";")
wine_data = pd.concat([red_wine, white_wine])
wine = wine_data.sample(6497).reset_index().drop(['index'], axis=1)


if st.checkbox('–ü–æ–∫–∞–∑–∞—Ç—å/—Å–∫—Ä—ã—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã : wine'):
    st.dataframe(wine)

data= wine.copy()
data["quality_enc"] = data["quality"].apply(lambda x: 0 if x in [3, 4, 5] else 1)

data.drop(['quality'], axis=1, inplace=True)



st.write(''' ---
### üîπ –û—Ç–±–æ—Ä –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
- üîç –û–ø—Ä–µ–¥–µ–ª–∏—Ç–µ —Ç—Ä–∏ –Ω–∞–∏–±–æ–ª–µ–µ –∑–Ω–∞—á–∏–º—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö –±–æ–ª–µ–µ 10 —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Å —Ç–∞—Ä–≥–µ—Ç–æ–º.''')

if st.checkbox('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –≤ —Å—Ç–æ–ª–±—Ü–∞—Ö: '):
    for i in data.columns:
        st.write(f" ‚ú®–°—Ç–æ–ª–±–µ—Ü **{i}**: {data[i].nunique()}")

st.dataframe(data.corrwith(data['quality_enc']).sort_values())
st.write(''' –¢—Ä–∏ –Ω–∞–∏–±–æ–ª–µ–µ –∑–Ω–∞—á–∏–º—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–∞ –ø–æ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ —Å —Ç–∞—Ä–≥–µ—Ç–æ–º:
- **alcohol** -  —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∞–ª–∫–æ–≥–æ–ª—è %
- **density** -  –ø–ª–æ—Ç–Ω–æ—Å—Ç—å %, c–≤—è–∑–∞–Ω–∞ —Å —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º —Å–∞—Ö–∞—Ä–∞ –∏ –∞–ª–∫–æ–≥–æ–ª—è
- **volatile acidity** -  –ª–µ—Ç—É—á–∞—è –∫–∏—Å–ª–æ—Ç–Ω–æ—Å—Ç—å %, –∫–æ—Ç–æ—Ä–∞—è –≤–ª–∏—è–µ—Ç –Ω–∞ –∑–∞–ø–∞—Ö –∏ –≤–∫—É—Å''')









st.write('''
---
### üîπ –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö''')

fig2 = px.scatter(wine, 
                  x="free sulfur dioxide", 
                  y="total sulfur dioxide", 
                  size="quality", 
                  color="quality",
                  title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –°–≤–æ–±–æ–¥–Ω—ã–π SO‚ÇÇ —Å –û–±—â–∏–π SO‚ÇÇ",
                  hover_name="quality",
                  size_max=15)
st.plotly_chart(fig2)


fig3 = px.histogram(wine, 
                    x="quality", 
                    title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –í–∏–Ω–∞",
                    nbins=6)
st.plotly_chart(fig3)

fig = plt.figure(figsize=(15, 8))
ax = fig.add_subplot(111, projection='3d')

scatter = ax.scatter(data["fixed acidity"],
            data["volatile acidity"], 
            data["alcohol"],
            c= data['quality_enc'],
            )

ax.set_xlabel("Fixed Acidity")
ax.set_ylabel("Volatile Acidity")
ax.set_zlabel("Alcohol", fontsize=15)
ax.set_title(" Wine Quality Dataset")
ax.legend(handles=scatter.legend_elements()[0], labels=[str(i) for i in data['quality_enc'].unique()])
st.pyplot(fig)

